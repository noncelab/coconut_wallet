// Mocks generated by Mockito 5.4.4 from annotations
// in coconut_wallet/test/providers/node_provider/transaction_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i13;
import 'dart:ui' as _i21;

import 'package:coconut_lib/coconut_lib.dart' as _i10;
import 'package:coconut_wallet/enums/network_enums.dart' as _i12;
import 'package:coconut_wallet/enums/wallet_enums.dart' as _i22;
import 'package:coconut_wallet/model/node/node_provider_state.dart' as _i4;
import 'package:coconut_wallet/model/node/script_status.dart' as _i17;
import 'package:coconut_wallet/model/node/wallet_update_info.dart' as _i9;
import 'package:coconut_wallet/model/utxo/utxo_state.dart' as _i18;
import 'package:coconut_wallet/model/wallet/balance.dart' as _i7;
import 'package:coconut_wallet/model/wallet/transaction_record.dart' as _i20;
import 'package:coconut_wallet/model/wallet/wallet_address.dart' as _i8;
import 'package:coconut_wallet/model/wallet/wallet_list_item_base.dart' as _i5;
import 'package:coconut_wallet/model/wallet/watch_only_wallet.dart' as _i19;
import 'package:coconut_wallet/providers/node_provider/state_manager.dart'
    as _i15;
import 'package:coconut_wallet/providers/node_provider/utxo_manager.dart'
    as _i16;
import 'package:coconut_wallet/providers/wallet_provider.dart' as _i6;
import 'package:coconut_wallet/services/electrum_service.dart' as _i11;
import 'package:coconut_wallet/services/model/response/block_timestamp.dart'
    as _i3;
import 'package:coconut_wallet/services/model/response/electrum_response_types.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeServerFeaturesRes_0 extends _i1.SmartFake
    implements _i2.ServerFeaturesRes {
  _FakeServerFeaturesRes_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBlockTimestamp_1 extends _i1.SmartFake
    implements _i3.BlockTimestamp {
  _FakeBlockTimestamp_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBalanceRes_2 extends _i1.SmartFake implements _i2.GetBalanceRes {
  _FakeGetBalanceRes_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBlockHeaderSubscribe_3 extends _i1.SmartFake
    implements _i2.BlockHeaderSubscribe {
  _FakeBlockHeaderSubscribe_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNodeProviderState_4 extends _i1.SmartFake
    implements _i4.NodeProviderState {
  _FakeNodeProviderState_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletListItemBase_5 extends _i1.SmartFake
    implements _i5.WalletListItemBase {
  _FakeWalletListItemBase_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResultOfSyncFromVault_6 extends _i1.SmartFake
    implements _i6.ResultOfSyncFromVault {
  _FakeResultOfSyncFromVault_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBalance_7 extends _i1.SmartFake implements _i7.Balance {
  _FakeBalance_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletAddress_8 extends _i1.SmartFake implements _i8.WalletAddress {
  _FakeWalletAddress_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletUpdateInfo_9 extends _i1.SmartFake
    implements _i9.WalletUpdateInfo {
  _FakeWalletUpdateInfo_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletBase_10 extends _i1.SmartFake implements _i10.WalletBase {
  _FakeWalletBase_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ElectrumService].
///
/// See the documentation for Mockito's code generation for more information.
class MockElectrumService extends _i1.Mock implements _i11.ElectrumService {
  MockElectrumService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get reqId => (super.noSuchMethod(
        Invocation.getter(#reqId),
        returnValue: 0,
      ) as int);

  @override
  _i12.SocketConnectionStatus get connectionStatus => (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _i12.SocketConnectionStatus.reconnecting,
      ) as _i12.SocketConnectionStatus);

  @override
  _i13.Future<void> connect(
    String? host,
    int? port, {
    bool? ssl = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [
            host,
            port,
          ],
          {#ssl: ssl},
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<String> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i13.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
      ) as _i13.Future<String>);

  @override
  _i13.Future<_i2.ServerFeaturesRes> serverFeatures() => (super.noSuchMethod(
        Invocation.method(
          #serverFeatures,
          [],
        ),
        returnValue:
            _i13.Future<_i2.ServerFeaturesRes>.value(_FakeServerFeaturesRes_0(
          this,
          Invocation.method(
            #serverFeatures,
            [],
          ),
        )),
      ) as _i13.Future<_i2.ServerFeaturesRes>);

  @override
  _i13.Future<List<String>> serverVersion() => (super.noSuchMethod(
        Invocation.method(
          #serverVersion,
          [],
        ),
        returnValue: _i13.Future<List<String>>.value(<String>[]),
      ) as _i13.Future<List<String>>);

  @override
  _i13.Future<String> getBlockHeader(int? height) => (super.noSuchMethod(
        Invocation.method(
          #getBlockHeader,
          [height],
        ),
        returnValue: _i13.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getBlockHeader,
            [height],
          ),
        )),
      ) as _i13.Future<String>);

  @override
  _i13.Future<_i3.BlockTimestamp> getBlockTimestamp(int? height) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBlockTimestamp,
          [height],
        ),
        returnValue:
            _i13.Future<_i3.BlockTimestamp>.value(_FakeBlockTimestamp_1(
          this,
          Invocation.method(
            #getBlockTimestamp,
            [height],
          ),
        )),
      ) as _i13.Future<_i3.BlockTimestamp>);

  @override
  _i13.Future<num> estimateFee(int? targetConfirmation) => (super.noSuchMethod(
        Invocation.method(
          #estimateFee,
          [targetConfirmation],
        ),
        returnValue: _i13.Future<num>.value(0),
      ) as _i13.Future<num>);

  @override
  _i13.Future<_i2.GetBalanceRes> getBalance(
    _i10.AddressType? addressType,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [
            addressType,
            address,
          ],
        ),
        returnValue: _i13.Future<_i2.GetBalanceRes>.value(_FakeGetBalanceRes_2(
          this,
          Invocation.method(
            #getBalance,
            [
              addressType,
              address,
            ],
          ),
        )),
      ) as _i13.Future<_i2.GetBalanceRes>);

  @override
  _i13.Future<List<_i2.GetHistoryRes>> getHistory(
    _i10.AddressType? addressType,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistory,
          [
            addressType,
            address,
          ],
        ),
        returnValue:
            _i13.Future<List<_i2.GetHistoryRes>>.value(<_i2.GetHistoryRes>[]),
      ) as _i13.Future<List<_i2.GetHistoryRes>>);

  @override
  _i13.Future<List<_i2.ListUnspentRes>> getUnspentList(
    _i10.AddressType? addressType,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnspentList,
          [
            addressType,
            address,
          ],
        ),
        returnValue:
            _i13.Future<List<_i2.ListUnspentRes>>.value(<_i2.ListUnspentRes>[]),
      ) as _i13.Future<List<_i2.ListUnspentRes>>);

  @override
  _i13.Future<List<_i2.GetMempoolRes>> getMempool(
    _i10.AddressType? addressType,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMempool,
          [
            addressType,
            address,
          ],
        ),
        returnValue:
            _i13.Future<List<_i2.GetMempoolRes>>.value(<_i2.GetMempoolRes>[]),
      ) as _i13.Future<List<_i2.GetMempoolRes>>);

  @override
  _i13.Future<String> broadcast(String? rawTransaction) => (super.noSuchMethod(
        Invocation.method(
          #broadcast,
          [rawTransaction],
        ),
        returnValue: _i13.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #broadcast,
            [rawTransaction],
          ),
        )),
      ) as _i13.Future<String>);

  @override
  _i13.Future<String> getTransaction(
    String? txHash, {
    bool? verbose,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransaction,
          [txHash],
          {#verbose: verbose},
        ),
        returnValue: _i13.Future<String>.value(_i14.dummyValue<String>(
          this,
          Invocation.method(
            #getTransaction,
            [txHash],
            {#verbose: verbose},
          ),
        )),
      ) as _i13.Future<String>);

  @override
  _i13.Future<List<List<num>>> getMempoolFeeHistogram() => (super.noSuchMethod(
        Invocation.method(
          #getMempoolFeeHistogram,
          [],
        ),
        returnValue: _i13.Future<List<List<num>>>.value(<List<num>>[]),
      ) as _i13.Future<List<List<num>>>);

  @override
  _i13.Future<_i2.BlockHeaderSubscribe> getCurrentBlock() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentBlock,
          [],
        ),
        returnValue: _i13.Future<_i2.BlockHeaderSubscribe>.value(
            _FakeBlockHeaderSubscribe_3(
          this,
          Invocation.method(
            #getCurrentBlock,
            [],
          ),
        )),
      ) as _i13.Future<_i2.BlockHeaderSubscribe>);

  @override
  _i13.Future<String?> subscribeScript(
    _i10.AddressType? addressType,
    String? address, {
    required dynamic Function(
      String,
      String?,
    )? onUpdate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeScript,
          [
            addressType,
            address,
          ],
          {#onUpdate: onUpdate},
        ),
        returnValue: _i13.Future<String?>.value(),
      ) as _i13.Future<String?>);

  @override
  _i13.Future<bool> unsubscribeScript(
    _i10.AddressType? addressType,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unsubscribeScript,
          [
            addressType,
            address,
          ],
        ),
        returnValue: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  _i13.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);
}

/// A class which mocks [NodeStateManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockNodeStateManager extends _i1.Mock implements _i15.NodeStateManager {
  MockNodeStateManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.NodeProviderState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeNodeProviderState_4(
          this,
          Invocation.getter(#state),
        ),
      ) as _i4.NodeProviderState);

  @override
  void setState({
    _i12.MainClientState? newConnectionState,
    Map<int, _i9.WalletUpdateInfo>? newUpdatedWallets,
    bool? notify = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setState,
          [],
          {
            #newConnectionState: newConnectionState,
            #newUpdatedWallets: newUpdatedWallets,
            #notify: notify,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void initWalletUpdateStatus(int? walletId) => super.noSuchMethod(
        Invocation.method(
          #initWalletUpdateStatus,
          [walletId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addWalletSyncState(
    int? walletId,
    _i12.UpdateElement? updateType,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addWalletSyncState,
          [
            walletId,
            updateType,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addWalletCompletedState(
    int? walletId,
    _i12.UpdateElement? updateType,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addWalletCompletedState,
          [
            walletId,
            updateType,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addWalletCompletedAllStates(int? walletId) => super.noSuchMethod(
        Invocation.method(
          #addWalletCompletedAllStates,
          [walletId],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UtxoManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockUtxoManager extends _i1.Mock implements _i16.UtxoManager {
  MockUtxoManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.Future<void> fetchScriptUtxo(
    _i5.WalletListItemBase? walletItem,
    _i17.ScriptStatus? scriptStatus, {
    bool? inBatchProcess = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchScriptUtxo,
          [
            walletItem,
            scriptStatus,
          ],
          {#inBatchProcess: inBatchProcess},
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<List<_i18.UtxoState>> fetchUtxoStateList(
    _i10.AddressType? addressType,
    _i17.ScriptStatus? scriptStatus,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUtxoStateList,
          [
            addressType,
            scriptStatus,
          ],
        ),
        returnValue:
            _i13.Future<List<_i18.UtxoState>>.value(<_i18.UtxoState>[]),
      ) as _i13.Future<List<_i18.UtxoState>>);

  @override
  _i13.Future<Map<int, _i3.BlockTimestamp>> fetchBlocksByHeight(
          Set<int>? heights) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchBlocksByHeight,
          [heights],
        ),
        returnValue: _i13.Future<Map<int, _i3.BlockTimestamp>>.value(
            <int, _i3.BlockTimestamp>{}),
      ) as _i13.Future<Map<int, _i3.BlockTimestamp>>);

  @override
  void updateUtxoStatusToOutgoingByTransaction(
    int? walletId,
    _i10.Transaction? transaction,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #updateUtxoStatusToOutgoingByTransaction,
          [
            walletId,
            transaction,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i18.UtxoState? getUtxoState(
    int? walletId,
    String? utxoId,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getUtxoState,
        [
          walletId,
          utxoId,
        ],
      )) as _i18.UtxoState?);

  @override
  void deleteUtxosByTransaction(
    int? walletId,
    _i10.Transaction? transaction,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #deleteUtxosByTransaction,
          [
            walletId,
            transaction,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void printUtxoStateList(int? walletId) => super.noSuchMethod(
        Invocation.method(
          #printUtxoStateList,
          [walletId],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletProvider extends _i1.Mock implements _i6.WalletProvider {
  MockWalletProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get gapLimit => (super.noSuchMethod(
        Invocation.getter(#gapLimit),
        returnValue: 0,
      ) as int);

  @override
  set gapLimit(int? _gapLimit) => super.noSuchMethod(
        Invocation.setter(
          #gapLimit,
          _gapLimit,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.WalletLoadState get walletLoadState => (super.noSuchMethod(
        Invocation.getter(#walletLoadState),
        returnValue: _i6.WalletLoadState.never,
      ) as _i6.WalletLoadState);

  @override
  _i6.WalletSubscriptionState get walletSubscriptionState =>
      (super.noSuchMethod(
        Invocation.getter(#walletSubscriptionState),
        returnValue: _i6.WalletSubscriptionState.never,
      ) as _i6.WalletSubscriptionState);

  @override
  List<_i5.WalletListItemBase> get walletItemList => (super.noSuchMethod(
        Invocation.getter(#walletItemList),
        returnValue: <_i5.WalletListItemBase>[],
      ) as List<_i5.WalletListItemBase>);

  @override
  Map<int, _i7.Balance> get walletBalance => (super.noSuchMethod(
        Invocation.getter(#walletBalance),
        returnValue: <int, _i7.Balance>{},
      ) as Map<int, _i7.Balance>);

  @override
  bool get isSyncing => (super.noSuchMethod(
        Invocation.getter(#isSyncing),
        returnValue: false,
      ) as bool);

  @override
  bool get isAnyBalanceUpdating => (super.noSuchMethod(
        Invocation.getter(#isAnyBalanceUpdating),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void addWalletUpdateListener(
    int? walletId,
    _i6.WalletUpdateListener? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addWalletUpdateListener,
          [
            walletId,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeWalletUpdateListener(
    int? walletId,
    _i6.WalletUpdateListener? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeWalletUpdateListener,
          [
            walletId,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<int, _i7.Balance> fetchWalletBalanceMap() => (super.noSuchMethod(
        Invocation.method(
          #fetchWalletBalanceMap,
          [],
        ),
        returnValue: <int, _i7.Balance>{},
      ) as Map<int, _i7.Balance>);

  @override
  _i5.WalletListItemBase getWalletById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getWalletById,
          [id],
        ),
        returnValue: _FakeWalletListItemBase_5(
          this,
          Invocation.method(
            #getWalletById,
            [id],
          ),
        ),
      ) as _i5.WalletListItemBase);

  @override
  _i13.Future<_i6.ResultOfSyncFromVault> syncFromVault(
          _i19.WatchOnlyWallet? watchOnlyWallet) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncFromVault,
          [watchOnlyWallet],
        ),
        returnValue: _i13.Future<_i6.ResultOfSyncFromVault>.value(
            _FakeResultOfSyncFromVault_6(
          this,
          Invocation.method(
            #syncFromVault,
            [watchOnlyWallet],
          ),
        )),
      ) as _i13.Future<_i6.ResultOfSyncFromVault>);

  @override
  _i13.Future<void> fetchWalletBalance(int? walletId) => (super.noSuchMethod(
        Invocation.method(
          #fetchWalletBalance,
          [walletId],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> deleteWallet(int? walletId) => (super.noSuchMethod(
        Invocation.method(
          #deleteWallet,
          [walletId],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  void setIsNetworkOn(bool? isNetworkOn) => super.noSuchMethod(
        Invocation.method(
          #setIsNetworkOn,
          [isNetworkOn],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Balance getWalletBalance(int? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getWalletBalance,
          [walletId],
        ),
        returnValue: _FakeBalance_7(
          this,
          Invocation.method(
            #getWalletBalance,
            [walletId],
          ),
        ),
      ) as _i7.Balance);

  @override
  List<_i8.WalletAddress> getWalletAddressList(
    _i5.WalletListItemBase? wallet,
    int? cursor,
    int? count,
    bool? isChange,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletAddressList,
          [
            wallet,
            cursor,
            count,
            isChange,
          ],
        ),
        returnValue: <_i8.WalletAddress>[],
      ) as List<_i8.WalletAddress>);

  @override
  _i13.Future<dynamic> encryptWalletSecureData(String? hashedPin) =>
      (super.noSuchMethod(
        Invocation.method(
          #encryptWalletSecureData,
          [hashedPin],
        ),
        returnValue: _i13.Future<dynamic>.value(),
      ) as _i13.Future<dynamic>);

  @override
  _i13.Future<dynamic> decryptWalletSecureData() => (super.noSuchMethod(
        Invocation.method(
          #decryptWalletSecureData,
          [],
        ),
        returnValue: _i13.Future<dynamic>.value(),
      ) as _i13.Future<dynamic>);

  @override
  bool containsAddress(
    int? walletId,
    String? address,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsAddress,
          [
            walletId,
            address,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<_i8.WalletAddress> filterChangeAddressesFromList(
    int? walletId,
    List<String>? addresses,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterChangeAddressesFromList,
          [
            walletId,
            addresses,
          ],
        ),
        returnValue: <_i8.WalletAddress>[],
      ) as List<_i8.WalletAddress>);

  @override
  _i8.WalletAddress getChangeAddress(int? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getChangeAddress,
          [walletId],
        ),
        returnValue: _FakeWalletAddress_8(
          this,
          Invocation.method(
            #getChangeAddress,
            [walletId],
          ),
        ),
      ) as _i8.WalletAddress);

  @override
  _i8.WalletAddress getReceiveAddress(int? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getReceiveAddress,
          [walletId],
        ),
        returnValue: _FakeWalletAddress_8(
          this,
          Invocation.method(
            #getReceiveAddress,
            [walletId],
          ),
        ),
      ) as _i8.WalletAddress);

  @override
  List<_i18.UtxoState> getUtxoList(int? walletId) => (super.noSuchMethod(
        Invocation.method(
          #getUtxoList,
          [walletId],
        ),
        returnValue: <_i18.UtxoState>[],
      ) as List<_i18.UtxoState>);

  @override
  List<_i20.TransactionRecord> getTransactionRecordList(int? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransactionRecordList,
          [walletId],
        ),
        returnValue: <_i20.TransactionRecord>[],
      ) as List<_i20.TransactionRecord>);

  @override
  _i18.UtxoState? getUtxoState(
    int? walletId,
    String? utxoId,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getUtxoState,
        [
          walletId,
          utxoId,
        ],
      )) as _i18.UtxoState?);

  @override
  _i20.TransactionRecord? getTransactionRecord(
    int? walletId,
    String? transactionHash,
  ) =>
      (super.noSuchMethod(Invocation.method(
        #getTransactionRecord,
        [
          walletId,
          transactionHash,
        ],
      )) as _i20.TransactionRecord?);

  @override
  _i9.WalletUpdateInfo getWalletUpdateInfo(int? walletId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletUpdateInfo,
          [walletId],
        ),
        returnValue: _FakeWalletUpdateInfo_9(
          this,
          Invocation.method(
            #getWalletUpdateInfo,
            [walletId],
          ),
        ),
      ) as _i9.WalletUpdateInfo);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i21.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WalletListItemBase].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletListItemBase extends _i1.Mock
    implements _i5.WalletListItemBase {
  MockWalletListItemBase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get colorIndex => (super.noSuchMethod(
        Invocation.getter(#colorIndex),
        returnValue: 0,
      ) as int);

  @override
  set colorIndex(int? _colorIndex) => super.noSuchMethod(
        Invocation.setter(
          #colorIndex,
          _colorIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get iconIndex => (super.noSuchMethod(
        Invocation.getter(#iconIndex),
        returnValue: 0,
      ) as int);

  @override
  set iconIndex(int? _iconIndex) => super.noSuchMethod(
        Invocation.setter(
          #iconIndex,
          _iconIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get descriptor => (super.noSuchMethod(
        Invocation.getter(#descriptor),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#descriptor),
        ),
      ) as String);

  @override
  _i22.WalletType get walletType => (super.noSuchMethod(
        Invocation.getter(#walletType),
        returnValue: _i22.WalletType.singleSignature,
      ) as _i22.WalletType);

  @override
  set walletType(_i22.WalletType? _walletType) => super.noSuchMethod(
        Invocation.setter(
          #walletType,
          _walletType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get receiveUsedIndex => (super.noSuchMethod(
        Invocation.getter(#receiveUsedIndex),
        returnValue: 0,
      ) as int);

  @override
  set receiveUsedIndex(int? _receiveUsedIndex) => super.noSuchMethod(
        Invocation.setter(
          #receiveUsedIndex,
          _receiveUsedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get changeUsedIndex => (super.noSuchMethod(
        Invocation.getter(#changeUsedIndex),
        returnValue: 0,
      ) as int);

  @override
  set changeUsedIndex(int? _changeUsedIndex) => super.noSuchMethod(
        Invocation.setter(
          #changeUsedIndex,
          _changeUsedIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i10.WalletBase get walletBase => (super.noSuchMethod(
        Invocation.getter(#walletBase),
        returnValue: _FakeWalletBase_10(
          this,
          Invocation.getter(#walletBase),
        ),
      ) as _i10.WalletBase);

  @override
  set walletBase(_i10.WalletBase? _walletBase) => super.noSuchMethod(
        Invocation.setter(
          #walletBase,
          _walletBase,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, _i17.UnaddressedScriptStatus> get subscribedScriptMap =>
      (super.noSuchMethod(
        Invocation.getter(#subscribedScriptMap),
        returnValue: <String, _i17.UnaddressedScriptStatus>{},
      ) as Map<String, _i17.UnaddressedScriptStatus>);

  @override
  set subscribedScriptMap(
          Map<String, _i17.UnaddressedScriptStatus>? _subscribedScriptMap) =>
      super.noSuchMethod(
        Invocation.setter(
          #subscribedScriptMap,
          _subscribedScriptMap,
        ),
        returnValueForMissingStub: null,
      );
}

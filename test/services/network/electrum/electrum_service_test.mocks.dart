// Mocks generated by Mockito 5.4.4 from annotations
// in coconut_wallet/test/services/network/electrum/electrum_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:coconut_wallet/enums/network_enums.dart' as _i4;
import 'package:coconut_wallet/services/model/response/electrum_response_types.dart'
    as _i2;
import 'package:coconut_wallet/services/network/electrum/electrum_client.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeServerFeaturesRes_0 extends _i1.SmartFake
    implements _i2.ServerFeaturesRes {
  _FakeServerFeaturesRes_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBalanceRes_1 extends _i1.SmartFake implements _i2.GetBalanceRes {
  _FakeGetBalanceRes_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBlockHeaderSubscribe_2 extends _i1.SmartFake
    implements _i2.BlockHeaderSubscribe {
  _FakeBlockHeaderSubscribe_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ElectrumClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockElectrumClient extends _i1.Mock implements _i3.ElectrumClient {
  MockElectrumClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get reqId => (super.noSuchMethod(
        Invocation.getter(#reqId),
        returnValue: 0,
      ) as int);

  @override
  _i4.SocketConnectionStatus get connectionStatus => (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _i4.SocketConnectionStatus.reconnecting,
      ) as _i4.SocketConnectionStatus);

  @override
  _i5.Future<void> connect(
    String? host,
    int? port, {
    bool? ssl = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [
            host,
            port,
          ],
          {#ssl: ssl},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String> ping() => (super.noSuchMethod(
        Invocation.method(
          #ping,
          [],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #ping,
            [],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<_i2.ServerFeaturesRes> serverFeatures() => (super.noSuchMethod(
        Invocation.method(
          #serverFeatures,
          [],
        ),
        returnValue:
            _i5.Future<_i2.ServerFeaturesRes>.value(_FakeServerFeaturesRes_0(
          this,
          Invocation.method(
            #serverFeatures,
            [],
          ),
        )),
      ) as _i5.Future<_i2.ServerFeaturesRes>);

  @override
  _i5.Future<List<String>> serverVersion() => (super.noSuchMethod(
        Invocation.method(
          #serverVersion,
          [],
        ),
        returnValue: _i5.Future<List<String>>.value(<String>[]),
      ) as _i5.Future<List<String>>);

  @override
  _i5.Future<String> getBlockHeader(int? height) => (super.noSuchMethod(
        Invocation.method(
          #getBlockHeader,
          [height],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #getBlockHeader,
            [height],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<num> estimateFee(int? targetConfirmation) => (super.noSuchMethod(
        Invocation.method(
          #estimateFee,
          [targetConfirmation],
        ),
        returnValue: _i5.Future<num>.value(0),
      ) as _i5.Future<num>);

  @override
  _i5.Future<_i2.GetBalanceRes> getBalance(String? script) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [script],
        ),
        returnValue: _i5.Future<_i2.GetBalanceRes>.value(_FakeGetBalanceRes_1(
          this,
          Invocation.method(
            #getBalance,
            [script],
          ),
        )),
      ) as _i5.Future<_i2.GetBalanceRes>);

  @override
  _i5.Future<List<_i2.GetHistoryRes>> getHistory(String? script) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistory,
          [script],
        ),
        returnValue:
            _i5.Future<List<_i2.GetHistoryRes>>.value(<_i2.GetHistoryRes>[]),
      ) as _i5.Future<List<_i2.GetHistoryRes>>);

  @override
  _i5.Future<List<_i2.ListUnspentRes>> getUnspentList(String? script) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnspentList,
          [script],
        ),
        returnValue:
            _i5.Future<List<_i2.ListUnspentRes>>.value(<_i2.ListUnspentRes>[]),
      ) as _i5.Future<List<_i2.ListUnspentRes>>);

  @override
  _i5.Future<List<_i2.GetMempoolRes>> getMempool(String? script) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMempool,
          [script],
        ),
        returnValue:
            _i5.Future<List<_i2.GetMempoolRes>>.value(<_i2.GetMempoolRes>[]),
      ) as _i5.Future<List<_i2.GetMempoolRes>>);

  @override
  _i5.Future<String> broadcast(String? rawTransaction) => (super.noSuchMethod(
        Invocation.method(
          #broadcast,
          [rawTransaction],
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #broadcast,
            [rawTransaction],
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<String> getTransaction(
    String? txHash, {
    bool? verbose,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTransaction,
          [txHash],
          {#verbose: verbose},
        ),
        returnValue: _i5.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #getTransaction,
            [txHash],
            {#verbose: verbose},
          ),
        )),
      ) as _i5.Future<String>);

  @override
  _i5.Future<List<List<num>>> getMempoolFeeHistogram() => (super.noSuchMethod(
        Invocation.method(
          #getMempoolFeeHistogram,
          [],
        ),
        returnValue: _i5.Future<List<List<num>>>.value(<List<num>>[]),
      ) as _i5.Future<List<List<num>>>);

  @override
  _i5.Future<_i2.BlockHeaderSubscribe> getCurrentBlock() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentBlock,
          [],
        ),
        returnValue: _i5.Future<_i2.BlockHeaderSubscribe>.value(
            _FakeBlockHeaderSubscribe_2(
          this,
          Invocation.method(
            #getCurrentBlock,
            [],
          ),
        )),
      ) as _i5.Future<_i2.BlockHeaderSubscribe>);

  @override
  _i5.Future<String?> subscribeScript(
    String? script, {
    required dynamic Function(
      String,
      String?,
    )? onUpdate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeScript,
          [script],
          {#onUpdate: onUpdate},
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<bool> unsubscribeScript(String? script) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribeScript,
          [script],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
